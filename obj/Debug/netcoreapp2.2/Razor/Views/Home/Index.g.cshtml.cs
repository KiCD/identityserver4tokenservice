#pragma checksum "C:\WORK\_exploration\openidconnect\identityserver4tokenservice\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "074ca2fb478ebe24ee8be86157e28ecaa1036ade"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(identityserver4tokenservice.Pages.Home.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(identityserver4tokenservice.Pages.Home.Views_Home_Index))]
namespace identityserver4tokenservice.Pages.Home
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\WORK\_exploration\openidconnect\identityserver4tokenservice\Views\_ViewImports.cshtml"
using identityserver4tokenservice;

#line default
#line hidden
#line 1 "C:\WORK\_exploration\openidconnect\identityserver4tokenservice\Views\Home\Index.cshtml"
using IdentityServer4.Quickstart.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"074ca2fb478ebe24ee8be86157e28ecaa1036ade", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"596e9b1521df8230807442947580d97819de6f2d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/.well-known/openid-configuration"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/grants"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\WORK\_exploration\openidconnect\identityserver4tokenservice\Views\Home\Index.cshtml"
  
    var version = typeof(TestUsers).Assembly.GetName().Version.ToString();

#line default
#line hidden
            BeginContext(117, 201, true);
            WriteLiteral("\n<div class=\"welcome-page\">\n    <div class=\"row page-header\">\n        <div class=\"col-sm-10\">\n            <h1>\n                Welcome to Elb test authentication server\n                <small>(version ");
            EndContext();
            BeginContext(319, 7, false);
#line 11 "C:\WORK\_exploration\openidconnect\identityserver4tokenservice\Views\Home\Index.cshtml"
                           Write(version);

#line default
#line hidden
            EndContext();
            BeginContext(326, 183, true);
            WriteLiteral(")</small>\n            </h1>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-sm-8\">\n            <p>\n                IdentityServer publishes a\n                ");
            EndContext();
            BeginContext(509, 67, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "074ca2fb478ebe24ee8be86157e28ecaa1036ade5010", async() => {
                BeginContext(554, 18, true);
                WriteLiteral("discovery document");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(576, 435, true);
            WriteLiteral(@"
                where you can find metadata and links to all the endpoints, key material, etc.
            </p>
        </div>
        <div class=""col-sm-8"">
            <p>
                You can use the following clients (see <a href=""https://github.com/IdentityServer/IdentityServer4.DemoSite/blob/master/src/IdentityServer4Demo/Config.cs"">here</a> for the code definition).
            </p>
            <p>
                Click ");
            EndContext();
            BeginContext(1011, 27, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "074ca2fb478ebe24ee8be86157e28ecaa1036ade6751", async() => {
                BeginContext(1030, 4, true);
                WriteLiteral("here");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1038, 3004, true);
            WriteLiteral(@" to manage your stored grants.
            </p>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-sm-8"">
            <p>
                <b>client id: native.hybrid</b> <br />
                grant type: hybrid with PKCE <br />
                allowed scopes: openid profile email api offline_access
            </p>

            <p>
                <b>client id: native.code</b> <br />
                grant type: authorization code with PKCE <br />
                allowed scopes: openid profile email api offline_access
            </p>

            <p>
                <b>client id: server.hybrid</b> <br />
                client secret: secret <br />
                grant type: hybrid <br />
                allowed scopes: openid profile email api offline_access
            </p>
            
            <p>
                <b>client id: server.hybrid.short (access token lifetime of 70 seconds)</b> <br />
                client secret: secret <br />
                grant type: hybrid <br />");
            WriteLiteral(@"
                allowed scopes: openid profile email api offline_access
            </p>

            <p>
                <b>client id: server.code</b> <br />
                client secret: secret <br />
                grant type: authorization code <br />
                allowed scopes: openid profile email api offline_access
            </p>

            <p>
                <b>client id: spa</b> <br />
                grant type: authorization code with PKCE <br />
                allowed scopes: openid profile email api offline_access
            </p>
            <p>
                <b>client id: spa.short (access token lifetime 70 seconds)</b> <br />
                grant type: authorization code with PKCE<br />
                allowed scopes: openid profile email api offline_access
            </p>

            <p>
                <b>client id: implicit</b> <br />
                grant type: implicit <br />
                allowed scopes: openid profile email api
            </p>

            <p>
     ");
            WriteLiteral(@"           <b>client id: implicit.reference</b> <br />
                grant type: implicit <br />
                allowed scopes: openid profile email api
            </p>

            <p>
                <b>client id: implicit.shortlived</b> <br />
                grant type: implicit <br />
                allowed scopes: openid profile email api
            </p>

            <p>
                <b>client id: client</b> <br />
                client secret: secret <br />
                grant type: client credentials <br />
                allowed scopes: api
            </p>

            <p>
                <b>client id: device</b> <br />
                grant type: urn:ietf:params:oauth:grant-type:device_code <br />
                allowed scopes: openid profile email api
            </p>

            <p>
                You can call a test API at https://demo.identityserver.io/api/test.
            </p>
        </div>
    </div>
</div>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
